Fonctionnement de l'affichage

o On ouvre un texte
  <> Il contient une seule page
      => on étudie cette page et on affiche les proximités
  <> Il contient plus d'une page
      => on étudie la page et la page suivante
      => on affiche la page et son miroir taggué
      => [Coulisses] on construit la page suivante et son miroir taggué
        (note : pour le miroir taggué, il faut prendre en compte la 3e page)
      o On passe à la page suivante
        => On affiche la page
        => On construit la page suivante
        => On étudie les proximités avec la page suivante

Définition précise des méthodes :

`show()` pour afficher la page normale et la page miroir, entendu qu'il faut
  toujours afficher la page miroir avec
  Si la page n'est pas construite, il faut la construire (build)
  NOTE : dans la méthode générale appelant 'show', il faut regarder si la
  page possède des pages autour (prev et next) et les construire si elles ne
  le sont pas (pour accélérer l'affichage).
  NOTE 2 : pendant cette construction (le check ?), il faudrait empêcher de
  pouvoir passer à une autre page.

`showTagged()` pour afficher la page miroir taggué (et seulement ça)
  Si la page tagguée n'est pas construite, il faut la construire (buildTagged)

`build()` Construction de la page normale et de la page tagguée si nécessaire
`buildTagged()` Construction de la page tagguée. Si la page n'a pas été checkée, il faut le faire (check())

`check()` Vérification des proximités de la page
  En prenant les pages autour.

Note : toutes ces méthodes sont asynchrones puisqu'elles peuvent, dans l'absolu, appeler le check des proximités.
